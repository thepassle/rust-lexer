#[derive(Debug, PartialEq)]
pub struct Token<'a> {
    pub kind: TokenType,
    pub value: &'a str,
    pub start: usize,
    pub end: usize,
    pub line: usize,
}

#[derive(Debug, PartialEq)]
pub enum TokenType {
    TemplateLiteral,
    TemplateExpression,
    TemplateLiteralExpression,
    // Single-character tokens
    LeftParen,
    RightParen,
    LeftBrace,
    RightBrace,
    LeftBracket,
    RightBracket,
    Dot,
    Comma,
    Colon,
    Semicolon,
    // Arithmetic operators
    Plus,
    Minus,
    Slash,
    Modulo,
    Asterisk,
    // Comparison operators
    Bang,
    BangEqual,
    Equal,
    EqualEqual,
    Greater,
    GreaterEqual,
    Less,
    LessEqual,
    // Literals
    Identifier,
    StringLiteral,
    NumericLiteral,
    // Keywords
    Class,
    Else,
    False,
    For,
    If,
    Null,
    Undefined,
    Return,
    Super,
    This,
    True,
    Var,
    While,
    In,
    Continue,
    Break,
    Function,
    Assert,
    Import,
    From,
    // End of file
    Eof,

    Case,
    Catch,
    Const,
    Debugger,
    Default,
    Delete,
    Do,
    Enum,
    Export,
    Extends,
    Finally,
    New,
    Switch,
    Throw,
    Try,
    Void,
    With,
    Yield,

    Abstract,
    Arguments,
    Await,
    Boolean,
    Byte,
    Char,
    Double,
    Eval,
    Final,
    Float,
    Goto,
    Implements,
    Instanceof,
    Int,
    Interface,
    Let,
    Long,
    Native,
    Package,
    Private,
    Protected,
    Public,
    Short,
    Static,
    Synchronized,
    Throws,
    Transient,
    Typeof,
    Volatile,
}
